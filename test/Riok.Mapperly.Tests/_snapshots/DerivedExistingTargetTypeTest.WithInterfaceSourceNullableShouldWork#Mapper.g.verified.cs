//HintName: Mapper.g.cs
// <auto-generated />
#nullable enable
public partial class Mapper
{
    public partial void Map(global::A? src, global::B trg)
    {
        if (src == null)
            return;
        switch (src, trg)
        {
            case (global::AImpl1 source, global::BImpl1 target):
                target.BaseValue = source.BaseValue;
                target.Value1 = source.Value1;
                break;
            case (global::AImpl2 source, global::BImpl2 target):
                target.BaseValue = source.BaseValue;
                target.Value2 = source.Value2;
                break;
            default:
                throw new System.ArgumentException($"Cannot map {src.GetType()} to {trg.GetType()} as there is no known derived type mapping", nameof(src));
        }
    }
}