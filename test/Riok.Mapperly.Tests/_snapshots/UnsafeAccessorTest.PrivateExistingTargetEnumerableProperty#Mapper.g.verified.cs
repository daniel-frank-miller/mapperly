//HintName: Mapper.g.cs
// <auto-generated />
#nullable enable
public partial class Mapper
{
    partial void Map(global::A source, global::B dest)
    {
        dest.GetValue1().EnsureCapacity(source.GetValue().Count + dest.GetValue1().Count);
        foreach (var item in source.GetValue())
        {
            dest.GetValue1().Add(item);
        }
    }
}
    
static file class UnsafeAccessor
{
    [global::System.Runtime.CompilerServices.UnsafeAccessor(global::System.Runtime.CompilerServices.UnsafeAccessorKind.Method, Name = "get_value")]
    public static extern global::System.Collections.Generic.List<int> GetValue(this global::A source);

    [global::System.Runtime.CompilerServices.UnsafeAccessor(global::System.Runtime.CompilerServices.UnsafeAccessorKind.Method, Name = "get_value")]
    public static extern global::System.Collections.Generic.List<int> GetValue1(this global::B source);
}